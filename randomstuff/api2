CREATE TABLE asiakas (
    asiakas_id INT GENERATED ALWAYS AS IDENTITY, 
    nimi VARCHAR(200) NOT NULL,
    puhelinnumero VARCHAR(20),
    katuosoite VARCHAR(50),
    postinumero integer,
    postitoimipaikka VARCHAR(20),
    PRIMARY KEY(asiakas_id)
);

ALTER TABLE asiakas
    ADD CONSTRAINT asiakas_unq UNIQUE(nimi);

INSERT INTO asiakas(nimi, puhelinnumero, katuosoite, postinumero, postitoimipaikka)
	VALUES ('Pentti', '0409864375', 'Soratie 3 b 10', '07123', 'Penttila');

INSERT INTO asiakas(nimi, puhelinnumero, katuosoite, postinumero, postitoimipaikka)
	VALUES ('Artturi', '0401236464', 'Kotikatu 1', '05252', 'Kunnas');

INSERT INTO asiakas(nimi, puhelinnumero, katuosoite, postinumero, postitoimipaikka)
	VALUES ('Emilia', '0502225346', 'Kyllas 1 c 2', '12345', 'Ojala');

INSERT INTO asiakas(nimi, puhelinnumero, katuosoite, postinumero, postitoimipaikka)
	VALUES ('Minni', '0506479797', 'Parkkilankuja 2', '60750', 'Parkkila');

INSERT INTO asiakas(nimi, puhelinnumero, katuosoite, postinumero, postitoimipaikka) VALUES
    ('Pentti', '0409864375', 'Soratie 3 b 10', '60750', 'Parkkila'),
    ('Artturi', '0401236464', 'Kotikatu 1', '60750', 'Parkkila'),
    ('Emilia', '0502225346', 'Kyllas 1 c 2', '60750', 'Parkkila'),
    ('Minni', '0506479797', 'Parkkilankuja 2', '60750', 'Parkkila'),
    ('Antti', '0506479797', 'Parkkilankuja 2', '60750', 'Parkkila'),
    ('Emmi', '0506341636', 'Ojakuja 21 b 3', '60750', 'Parkkila'),
    ('Jaana', '0451270877', 'Jokukatu 12 c 1', '60750', 'Parkkila'),
    ('Aleksanteri', '0409801423', 'Ristitie 3', '60750', 'Parkkila'),
    ('Juho', '0401230867', 'Torikatu 1 a 1', '60750', 'Parkkila'),
    ('Alisa', '0455689911', 'Osoitetie 63 b12', '60750', 'Parkkila'),
    ('Niko', '0505551234', 'Metsolanrinne 3', '60750', 'Parkkila'),
    ('Lini', '0509876543', 'Kaarnis 9', '60750', 'Parkkila'),
    ('Kare', '0506452152', 'Blablakatu 123 b 123', '60750', 'Parkkila');


INSERT INTO asiakas(nimi, puhelinnumero, katuosoite, postinumero, postitoimipaikka) VALUES
    ('Pentti', '0409864375', 'Soratie 3 b 10', '07123', 'Penttila'),
    ('Artturi', '0401236464', 'Kotikatu 1', '05252', 'Kunnas'),
    ('Emilia', '0502225346', 'Kyllas 1 c 2', '12345', 'Ojala'),
    ('Minni', '0506479797', 'Parkkilankuja 2', '60750', 'Parkkila')
    ('Antti', '0506479797', 'Parkkilankuja 2', '60750', 'Parkkila'),
    ('Emmi', '0506341636', 'Ojakuja 21 b 3', '60321', 'Partsila'),
    ('Jaana', '0451270877', 'Jokukatu 12 c 1', '80152', 'Pakkila'),
    ('Aleksanteri', '0409801423', 'Ristitie 3', '60720', 'Pukkila'),
    ('Juho', '0401230867', 'Torikatu 1 a 1', '12500', 'Paijas'),
    ('Alisa', '0455689911', 'Osoitetie 63 b12', '30303', 'Plapla'),
    ('Niko', '0505551234', 'Metsolanrinne 3', '16750', 'Pellos'),
    ('Lini', '0509876543', 'Kaarnis 9', '60750', 'Parkkila'),
    ('Kare', '0506452152', 'Blablakatu 123 b 123', '60750', 'Parkkila');

##############################################################################################

CREATE TABLE ravintola (
    ravintola_id INT GENERATED ALWAYS AS IDENTITY, 
    nimi VARCHAR(200) NOT NULL,
    puhelinnumero VARCHAR(20),
    katuosoite VARCHAR(50),
    postinumero integer,
    postitoimipaikka VARCHAR(20),
    PRIMARY KEY(ravintola_id)
);

ALTER TABLE ravintola
    ADD CONSTRAINT ravintola_unq UNIQUE(nimi);


INSERT INTO ravintola(nimi, puhelinnumero, katuosoite, postinumero, postitoimipaikka) VALUES
    ('Parkkilan Kebab', '0406952364', 'Parkkilankuja 13', '60750', 'Parkkila')
    ('Doneri', '0453052464', 'Paiholankatu 3', '60750', 'Parkkila')
    ('Poron pizzaria', '0404206969', 'Porokukkula 1', '60750', 'Parkkila')

INSERT INTO ravintola(nimi, puhelinnumero, katuosoite, postinumero, postitoimipaikka)
	VALUES ('Parkkilan Kebab', '0406952364', 'Parkkilankuja 13', '60750', 'Parkkila');

INSERT INTO ravintola(nimi, puhelinnumero, katuosoite, postinumero, postitoimipaikka)
	VALUES ('Doneri', '0453052464', 'Paiholankatu 3', '12750', 'Kontiolahti');

##############################################################################################

CREATE TABLE raakaaine (
    raakaaine_id INT GENERATED ALWAYS AS IDENTITY, 
    nimi VARCHAR(200) NOT NULL,
    PRIMARY KEY(raakaaine_id)
);

ALTER TABLE raakaaine
    ADD CONSTRAINT raakaaine_unq UNIQUE(nimi);

INSERT INTO RaakaAine (nimi) VALUES ('kebab');
INSERT INTO RaakaAine (nimi) VALUES ('ranskalaiset');
INSERT INTO RaakaAine (nimi) VALUES ('riisi');
INSERT INTO RaakaAine (nimi) VALUES ('salaatti');
INSERT INTO RaakaAine (nimi) VALUES ('kalender');

INSERT INTO RaakaAine (nimi) VALUES 
    ('Jauheliha'),
    ('Ananas'),
    ('katkarapu'),
    ('aurajuusto'),
    ('jalopeno'),
    ('tonnikala'),
    ('pekoni');


##############################################################################################

CREATE TABLE annos (
    annos_id INT GENERATED ALWAYS AS IDENTITY, 
    ravintola_id INT,
    nimi VARCHAR(200),
    koko VARCHAR(30),
    hinta double precision,
    PRIMARY KEY(annos_id),
    CONSTRAINT fk_ravintola
        FOREIGN KEY(ravintola_id) 
            REFERENCES ravintola(ravintola_id)
);

INSERT INTO annos(ravintola_id, nimi, koko, hinta)
    VALUES (1, 'kebab_ranskalaiset', 'iso', 10.50);

INSERT INTO annos(ravintola_id, nimi, koko, hinta)
    VALUES (2, 'kebab_riisi', 'pieni', 7.25);

SELECT ravintola.nimi AS ravintola_nimi,
    annos.ravintola_id AS ravintola_id,
    annos.annos_id AS annos_id,
    annos.nimi AS nimi,
    annos.koko AS koko,
    annos.hinta AS hinta
        FROM annos, ravintola
        WHERE annos.ravintola_id = ravintola.ravintola_id;

SELECT annos.annos_id AS annos_id, annos.nimi AS annos, raakaaine.nimi AS raakaaine
    FROM annos, raakaaine, annosraakaaine
    WHERE annos.annos_id = annosraakaaine.annos_id
        AND raakaaine.raakaaine_id = annosraakaaine.raakaaine_id


##############################################################################################

#### asiakas_id INT NOT NULL,

CREATE TABLE tilaus(
   tilaus_id INT GENERATED ALWAYS AS IDENTITY,
   asiakas_id INT,
   aika DATE,
   kuljetustapa VARCHAR(40),
   vastaanotettu boolean,
   toimitettu boolean,
   PRIMARY KEY(tilaus_id),
   CONSTRAINT fk_asiakas
      FOREIGN KEY(asiakas_id) 
        REFERENCES asiakas(asiakas_id)
);

INSERT INTO tilaus(asiakas_id, aika, kuljetustapa, vastaanotettu, toimitettu)
    VALUES (1, now(), 'toimitus', false, false);

INSERT INTO tilaus(asiakas_id, aika, kuljetustapa, vastaanotettu, toimitettu)
    VALUES (2, now(), 'toimitus', false, true);

##############################################################################################

CREATE TABLE annosraakaaine (
    annos_id INT,
    raakaaine_id INT,
    CONSTRAINT fk_annos
      FOREIGN KEY(annos_id) 
        REFERENCES annos(annos_id)
            ON DELETE CASCADE,
    CONSTRAINT fk_raakaaine
      FOREIGN KEY(raakaaine_id) 
        REFERENCES raakaaine(raakaaine_id)
);

INSERT INTO annosraakaaine(annos_id, raakaaine_id) VALUES (1, 1);
INSERT INTO annosraakaaine(annos_id, raakaaine_id) VALUES (1, 2);

INSERT INTO annosraakaaine(annos_id, raakaaine_id) VALUES (2, 1);
INSERT INTO annosraakaaine(annos_id, raakaaine_id) VALUES (2, 3);

SELECT annos.annos_id AS annos_id, annos.nimi AS annos, raakaaine.nimi AS raakaaine
    FROM annos, raakaaine, annosraakaaine
    WHERE annos.annos_id = annosraakaaine.annos_id
        AND raakaaine.raakaaine_id = annosraakaaine.raakaaine_id


##############################################################################################

CREATE TABLE tilausannos (
    tilaus_id INT,
    annos_id INT,
    CONSTRAINT fk_tilaus
      FOREIGN KEY(tilaus_id) 
        REFERENCES tilaus(tilaus_id)
            ON DELETE CASCADE,
    CONSTRAINT fk_annos
      FOREIGN KEY(annos_id) 
        REFERENCES annos(annos_id)
);

INSERT INTO tilausannos(tilaus_id, annos_id) VALUES (3, 1);

SELECT asiakas.nimi AS asiakas, annos.nimi AS annos
    FROM asiakas, tilaus, tilausannos, annos
    WHERE asiakas.asiakas_id = tilaus.asiakas_id
        AND tilausAnnos.tilaus_id = tilaus.tilaus_id
        AND annos.annos_id = tilausannos.annos_id;

SELECT asiakas.nimi AS asiakas, tilaus.tilaus_id as tilaus, annos.nimi AS annos
    FROM asiakas, tilaus, tilausannos, annos
    WHERE asiakas.asiakas_id = tilaus.asiakas_id
        AND tilausAnnos.tilaus_id = tilaus.tilaus_id
        AND annos.annos_id = tilausannos.annos_id;

##############################################################################################
